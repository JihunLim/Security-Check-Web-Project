<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="egovframework.security.office.dao.SecurityOfficeDAO">
	<!-- 테이블 이름을 대문자로 변경시 오류발생! -->
 
    <!--  #안에 있는 건 jsp내 form 안에 name 태그 설정 값을 써주면 됨 -->
    
 	<!-- 부서DB DAO_Mapper-->
    <select id="selectDeptDao" resultType="egovframework.security.dto.DeptDTO">
        SELECT * FROM dept ORDER BY deptNo ASC
    </select>
 
 	<select id="selectDeptNameDao" parameterType="int" resultType="String">
        SELECT deptName FROM dept where deptNo = #{param1}
    </select>
 	
 	<select id="selectDeptNumDao" resultType="int">
        SELECT deptNum FROM dept
    </select>
 
 	<select id="selectNDeptDao" resultType="int">
        SELECT count(*) FROM dept
    </select>
 
 	<select id="selectDeptBossEmailDao" parameterType="int" resultType="string">
        SELECT deptBoss FROM dept where deptNo = #{param1}
    </select>
    
    <select id="selectTotalDeptDao" parameterType="int" resultType="string">
        SELECT deptName FROM dept where deptNo = #{param1}
    </select>
 
    <insert id="insertDeptDao" parameterType="egovframework.security.dto.DeptDTO">
        INSERT into dept (deptName) values(#{deptName})
    </insert>
    
    <delete id="deleteDeptDao" parameterType="egovframework.security.dto.DeptDTO">
    	DELETE FROM dept WHERE deptNo = #{deptNo}
    </delete>
    
    
    <!-- 사무실보안점검DB DAO_Mapper-->
    <select id="selectOfficeSecurityDao" parameterType="long" resultType="egovframework.security.dto.OfficeSecurityDTO">
        SELECT os_id,os_empemail,os_deptcode,os_deptcode,os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,os_image,deptName,emp_name  FROM officesecurity, employee, dept where employee.emp_email=officesecurity.os_empemail and dept.deptNo=officesecurity.os_deptcode ORDER BY os_datetime DESC, os_deptcode ASC limit 15 offset #{param1}
    </select>
    
    <select id="selectOfficeSecurityWithDeptDao" parameterType="hashmap" resultType="egovframework.security.dto.OfficeSecurityDTO">
        SELECT os_id,os_empemail,os_deptcode,os_deptcode,os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,os_image,deptName,emp_name  FROM officesecurity, employee, dept where os_deptcode = #{userDept} and employee.emp_email=officesecurity.os_empemail and dept.deptNo=officesecurity.os_deptcode ORDER BY os_datetime DESC limit 15 offset #{page}
    </select>
 
 	<select id="selectOfficeSecurityWithDeptAndDateDao" parameterType="hashmap" resultType="egovframework.security.dto.OfficeSecurityDTO">
        SELECT os_id,os_empemail,os_deptcode,os_deptcode,os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,os_image,deptName,emp_name  FROM officesecurity, employee, dept where os_deptcode = #{userDept} and employee.emp_email=officesecurity.os_empemail and dept.deptNo=officesecurity.os_deptcode and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate} ORDER BY os_datetime DESC limit 15 offset #{page}
    </select>
 
 	<select id="selectOfficeSecurityWithDateDao" parameterType="hashmap" resultType="egovframework.security.dto.OfficeSecurityDTO">
        SELECT os_id,os_empemail,os_deptcode,os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,os_image,deptName,emp_name  FROM officesecurity, employee, dept where employee.emp_email=officesecurity.os_empemail and dept.deptNo=officesecurity.os_deptcode and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate} ORDER BY os_datetime DESC limit 15 offset #{page}
    </select>
    
    <!-- emp_name은 최종퇴실자 이름 -->
    <select id="printOfficeSecurityWithDateDao" parameterType="hashmap" resultType="egovframework.security.dto.PrintOfficeDTO">
        <![CDATA[ 
        	SELECT os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,deptName,emp_name,wk_datetime  FROM employee, dept, watchkeeping right outer join officesecurity on date(os_datetime)=date(wk_datetime) where employee.emp_email=officesecurity.os_empemail and dept.deptNo=officesecurity.os_deptcode and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN '2017-01-01' AND #{param_date} and os_deptcode=#{param_dept} ORDER BY os_id ASC limit 15;
        ]]> 
    </select>
    
    <!-- emp_name은 당직자 이름 -->
    <select id="printOfficeSecurityWithDateForNDDao" parameterType="hashmap" resultType="egovframework.security.dto.PrintOfficeDTO">
        <![CDATA[ 
        	SELECT os_document,os_clean,os_lightout,os_ventilation,os_door,os_etc,os_datetime,deptName,emp_name,wk_datetime  FROM officesecurity, employee, dept, watchkeeping where employee.emp_email=wk_empemail and dept.deptNo=employee.emp_deptcode and date(os_datetime)=date(wk_datetime) and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN '2017-01-01' AND #{param_date} and os_deptcode=#{param_dept} ORDER BY os_id ASC limit 15;
        ]]> 
    </select>
    
    <insert id="insertOfficeSecurityDao" parameterType="egovframework.security.dto.OfficeSecurityDTO">
        INSERT into officesecurity values(default, #{os_empemail}, #{os_deptcode}, #{os_document}, #{os_clean}, #{os_lightout}, #{os_ventilation}, #{os_door}, #{os_etc}, default, #{os_image})
    </insert>
    
    <update id="updateOfficeSecurityDao" parameterType="egovframework.security.dto.OfficeSecurityDTO">
    	UPDATE officesecurity set os_empemail=#{os_empemail},os_document=#{os_document},os_clean=#{os_clean},os_lightout=#{os_lightout},os_ventilation=#{os_ventilation},os_door=#{os_door},os_etc=#{os_etc},os_datetime=#{os_datetime},os_image=#{os_image} where os_id = #{os_id}
    </update>
    
    <update id="updateOfficeSecurityNoImageDao" parameterType="egovframework.security.dto.OfficeSecurityDTO">
    	UPDATE officesecurity set os_empemail=#{os_empemail},os_document=#{os_document},os_clean=#{os_clean},os_lightout=#{os_lightout},os_ventilation=#{os_ventilation},os_door=#{os_door},os_etc=#{os_etc},os_datetime=#{os_datetime} where os_id = #{os_id}
    </update>
    
    
    
    <delete id="deleteOfficeSecurityDao" parameterType="egovframework.security.dto.OfficeSecurityDTO">
    	DELETE FROM officesecurity WHERE os_id = #{os_id}
    </delete>    
    
    <select id="findDeptDao" parameterType="string" resultType="hashmap">
    	select emp_deptcode from employee where emp_email = #{param1}
    </select>
    
    <select id="checkOfficeSecurityWithDateDao" parameterType="int" resultType="hashmap">
    	select * from officesecurity where date(os_datetime) = date(now()) and os_deptcode = #{os_deptcode} 
    </select>
    
     <select id="selectPicOfficeSecurityWithNoDao" parameterType="int" resultType="egovframework.security.dto.OfficeSecurityDTO">
        SELECT os_image FROM officesecurity where os_id = #{param1}
    </select>
    
    <!-- 당직근무일지DB DAO_Mapper-->
    <select id="selectWatchKeepingDao" parameterType="long" resultType="egovframework.security.dto.WatchKeepingDTO">
        SELECT wk_id,wk_datetime,wk_empemail,wk_indication,wk_measure,wk_dp1,wk_dp2,wk_dp3,wk_dp4,wk_dp5,wk_dp6,wk_dp7,wk_dp8,wk_dp9,wk_dp10,wk_specificity,wk_report,wk_delivery,deptName,emp_name,deptNo FROM watchkeeping, employee, dept where wk_empemail=emp_email and deptNo=emp_deptcode ORDER BY wk_datetime DESC limit 15 offset #{param1}	
    </select>
    
    <select id="selectWatchKeepingWithDateDao" parameterType="hashmap" resultType="egovframework.security.dto.WatchKeepingDTO">
        SELECT wk_id,wk_datetime,wk_empemail,wk_indication,wk_measure,wk_dp1,wk_dp2,wk_dp3,wk_dp4,wk_dp5,wk_dp6,wk_dp7,wk_dp8,wk_dp9,wk_dp10,wk_specificity,wk_report,wk_delivery,deptName,emp_name,deptNo FROM watchkeeping, employee, dept where wk_empemail=emp_email and deptNo=emp_deptcode and DATE_FORMAT(wk_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate} ORDER BY wk_datetime DESC limit 15 offset #{data}	
    </select>
    
 	<select id="selectWatchKeepingWithIdDao" parameterType="int" resultType="egovframework.security.dto.WatchKeepingDTO">
        SELECT wk_id,wk_datetime,wk_empemail,wk_indication,wk_measure,wk_dp1,wk_dp2,wk_dp3,wk_dp4,wk_dp5,wk_dp6,wk_dp7,wk_dp8,wk_dp9,wk_dp10,wk_specificity,wk_report,wk_delivery,deptName,emp_name,emp_rank FROM watchkeeping, employee, dept where wk_empemail=emp_email and deptNo=emp_deptcode and wk_id = #{param1};	
    </select>
    
    <select id="selectNumWatchKeepingDao" resultType="int">
        SELECT count(*) FROM watchkeeping where date(wk_datetime) = date(now())	
    </select>
 
    <insert id="insertWatchKeepingDao" parameterType="egovframework.security.dto.WatchKeepingDTO">
        INSERT into watchkeeping values(default,default,#{wk_empemail},#{wk_indication},#{wk_measure},#{wk_dp1},#{wk_dp2},#{wk_dp3},#{wk_dp4},#{wk_dp5},#{wk_dp6},#{wk_dp7},#{wk_dp8},#{wk_dp9},#{wk_dp10},#{wk_specificity}, #{wk_report}, #{wk_delivery})
    </insert>
    
    <update id="updateWatchKeepingDao" parameterType="egovframework.security.dto.WatchKeepingDTO">
    	UPDATE watchkeeping set wk_empemail=#{wk_empemail},wk_measure=#{wk_measure},wk_dp1=#{wk_dp1},wk_dp2=#{wk_dp2},wk_dp3=#{wk_dp3},wk_dp4=#{wk_dp4},wk_dp5=#{wk_dp5},wk_dp6=#{wk_dp6},wk_dp7=#{wk_dp7},wk_dp8=#{wk_dp8},wk_dp9=#{wk_dp9},wk_dp10=#{wk_dp10},wk_specificity=#{wk_specificity},wk_report=#{wk_report},wk_delivery=#{wk_delivery} where date(wk_datetime) = date(now());
    </update>
    
    <delete id="deleteWatchKeepingDao" parameterType="egovframework.security.dto.WatchKeepingDTO">
    	DELETE FROM watchkeeping WHERE wk_id = #{wk_id} 
    </delete>
    
    
    <!-- 회원DB DAO_Mapper-->
    <select id="selectEmployeeDao" resultType="egovframework.security.dto.EmployeeDTO">
    	select emp_email, emp_name, emp_phone, emp_deptcode, emp_role, emp_rank, deptName from employee, dept where dept.deptNo = employee.emp_deptcode order by emp_deptcode ASC
    </select>
    
    <select id="selectEmployeeNotManagerDao" parameterType="long" resultType="egovframework.security.dto.EmployeeDTO">
    	select emp_email, emp_name, emp_phone, emp_deptcode, emp_role, emp_rank, deptName from employee, dept where dept.deptNo = employee.emp_deptcode and emp_role="ROLE_USER" order by emp_deptcode ASC, emp_name ASC  limit 15 offset #{param};
    </select>
    
 
    <select id="selectNumEmployeeNotManagerDao" resultType="int">
    	select count(*) from employee, dept where dept.deptNo = employee.emp_deptcode and emp_role="ROLE_USER" 
    </select>
    
    <select id="selectManagerDao" resultType="String">
    	select emp_email from employee where emp_role = "ROLE_ADMIN"
   	</select>
    
    <select id="selectDeptWithIdDao" parameterType="String" resultType="int">
    	select emp_deptcode from employee where emp_email = #{param1}
    </select>
    
    <select id="selectEmpWithIdDao" parameterType="String" resultType="hashmap">
    	select * from employee where emp_email = #{param1}
    </select>
    
    <select id="selectAllManagerDao" resultType="egovframework.security.dto.EmployeeDTO">
    	select emp_email, emp_name, emp_phone, emp_deptcode, emp_role, emp_rank, deptName, emp_checkemail from employee, dept where dept.deptNo = employee.emp_deptcode and emp_role = "ROLE_ADMIN"  ORDER BY emp_deptcode ASC
    </select>
    
    <select id="selectManagerCheckEmailDao" resultType="hashmap">
    	select emp_email from employee where emp_checkemail = 'Y' and emp_role="ROLE_ADMIN"; 
    </select>
    
    <update id="changeCheckEmailDao" parameterType="hashmap">
    	update employee set emp_checkemail = #{emailCheck} where emp_email = #{emp_email};
    </update>    
    
    <select id="selectManagerCheckEmailNumDao" resultType="int">
    	select count(*) from employee where emp_checkemail = 'Y'  
    </select>
    
    <update id="updateAuthEmpDao" parameterType="String">
    	update employee set emp_role = "ROLE_USER" where emp_email = #{param1}
    </update>
    
    <update id="addManagerDao" parameterType="String">
    	update employee set emp_role = "ROLE_ADMIN" where emp_email = #{param1}
    </update>
    
    <select id="countManagerDao" resultType="int">
    	select count(*) from employee where emp_role = "ROLE_ADMIN"
    </select>
    
    <!-- 당직표 DAO Mapper -->
    
    <insert id="insertNightDutyDao" parameterType="egovframework.security.dto.NightDutyDTO">
    	insert into nightduty values(#{nd_date}, #{nd_empemail})
    </insert>
    
    <select id="checkNightDutyDao" parameterType="string" resultType="int">
    	select count(*) from nightduty where nd_date LIKE date(#{param1})
    </select>
    
    <update id="updateNightDutyDao" parameterType="egovframework.security.dto.NightDutyDTO">
    	update nightduty set nd_date = #{nd_date}, nd_empemail = #{nd_empemail} where nd_date = #{nd_date}
    </update>
    
    <select id="selectNightDutyDao" resultType="egovframework.security.dto.NightDutyDTO">
    	select nd_date,nd_empemail,deptName,emp_rank,emp_name from nightduty,employee,dept where emp_email=nd_empemail and emp_deptcode=deptNo order by nd_date DESC
    </select>

<select id="selectNightDutyWithMonthDao" parameterType="string" resultType="egovframework.security.dto.NightDutyDTO">
	<![CDATA[ 
    	select nd_date,nd_empemail,deptName,emp_rank,emp_name from nightduty left outer join employee on nd_empemail=emp_email left outer join dept on emp_deptcode=deptNo where nd_date LIKE #{param1} order by nd_date ASC
    ]]>
    </select>
    

	<select id="selectNightDutyOnlyMeDao" parameterType="string" resultType="egovframework.security.dto.NightDutyDTO">
    	select nd_date,nd_empemail,deptName,emp_rank,emp_name from nightduty,employee,dept where emp_email=nd_empemail and emp_deptcode=deptNo and nd_empemail= #{param1} order by nd_date DESC
    </select>

    <select id="selectNightDutyWithDateDao" resultType="egovframework.security.dto.NightDutyDTO" parameterType="String">
    	select * from nightduty where nd_date = #{param1}
    </select>
    
    <select id="selectEmailNightDutyWithDateDao" resultType="String">
    	select nd_empemail from nightduty where date(nd_date) = date(now())
    </select>
    
    <select id="selectNumNightDutyWithDateDao" resultType="int">
    	select count(*) from nightduty where date(nd_date) = date(now())
    </select>
    
    <select id="selectNightDutyEmailAfter3DayDao" parameterType="int" resultType="egovframework.security.dto.NightDutyDTO">
    	select * from nightduty WHERE nd_date = date(CURDATE() + INTERVAL #{param1} DAY);
    </select>    
    
    <select id="checkNightDutyEmailAfter3DayDao" parameterType="int" resultType="int">
    	select count(*) from nightduty WHERE nd_date = date(CURDATE() + INTERVAL #{param1} DAY);
    </select>   
    
    <!-- 페이징 처리 DB -->
    <select id="selectNumTotalListOfMOfficeDao" resultType="long">
    	select count(*) from officesecurity
    </select>
   
    <select id="selectNumTotalListOfMOfficeWithDeptAndDateDao" parameterType="hashmap" resultType="long">
    	select count(*) from officesecurity where os_deptcode=#{userDept} and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}; 
    </select>
    
    <select id="selectNumTotalListOfMOfficeWithDeptDao" parameterType="hashmap" resultType="long">
    	select count(*) from officesecurity where os_deptcode=#{userDept};
    </select>
    
    <select id="selectNumTotalListOfMOfficeWithDateDao" parameterType="hashmap" resultType="long">
    	select count(*) from officesecurity where DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate};
    </select>
    
    <select id="selectNumTotalListOfOfficeWithDeptDao" parameterType="int" resultType="long">
    	select count(*) from officesecurity where os_deptcode = #{param1}
    </select>
    
     <select id="selectNumTotalListOfOfficeWithDeptAndDateDao" parameterType="hashmap" resultType="long">
    	select count(*) from officesecurity where os_deptcode = #{userDept} and DATE_FORMAT(os_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate};
    </select>
    
    <select id="selectNumTotalListOfNightDutyDao" resultType="long">
    	select count(*) from watchkeeping
    </select>
    
    <select id="selectNumTotalListOfNightDutyWithDateDao" parameterType="hashmap" resultType="long">
    	select count(*) from watchkeeping where DATE_FORMAT(wk_datetime, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate};
    </select>
    
    <!-- S.M.A.R.T 보안점검 처리 DB -->
    <select id="selectNumImplementDao" parameterType="int" resultType="int">
    	select count(*) from officesecurity where os_deptcode = #{param1}
    </select>
    
    <select id="selectCheckScoreDeptOfficeDao" parameterType="int" resultType="int">
    	select count(*) from officesecurity where os_deptcode = #{param1} and date(os_datetime) between adddate(curdate(), 1-dayofmonth(curdate())) and last_day(curdate())
    </select>
    
    <select id="selectScoreDeptOfficeDao" parameterType="int" resultType="int">
    	select sum(os_document+os_clean+os_lightout+os_ventilation+os_door) from officesecurity where date(os_datetime) between adddate(curdate(), 1-dayofmonth(curdate())) and last_day(curdate()) and os_deptcode = #{param1} group by os_deptcode
    </select>
    
    <select id="selectScoreDocumentDao" resultType="float">
    	SELECT sum(os_document) FROM sejongdb.officesecurity;
    </select>
    <select id="selectScoreCleanDao" resultType="float">
    	SELECT sum(os_clean) FROM sejongdb.officesecurity;
    </select>
    <select id="selectScoreLightoutDao" resultType="float">
    	SELECT sum(os_lightout) FROM sejongdb.officesecurity;
    </select>
    <select id="selectScoreVentilationDao" resultType="float">
    	SELECT sum(os_ventilation) FROM sejongdb.officesecurity;
    </select>
    <select id="selectScoreDoorDao" resultType="float">
    	SELECT sum(os_door) FROM sejongdb.officesecurity;
    </select>
    <select id="selectScoreDao" resultType="java.util.HashMap">
    	SELECT sum(os_document),sum(os_clean),sum(os_lightout),sum(os_ventilation),sum(os_door) FROM sejongdb.officesecurity;
    </select>
    
    
    <select id="selectScoreDocumentWithDeptDao" parameterType="int" resultType="int">
    	SELECT sum(os_document) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    <select id="selectScoreCleanWithDeptDao" parameterType="int" resultType="int">
    	SELECT sum(os_clean) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    <select id="selectScoreLightoutWithDeptDao" parameterType="int" resultType="int">
    	SELECT sum(os_lightout) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    <select id="selectScoreVentilationWithDeptDao" parameterType="int" resultType="int">
    	SELECT sum(os_ventilation) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    <select id="selectScoreDoorWithDeptDao" parameterType="int" resultType="int">
    	SELECT sum(os_door) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    
    <select id="selectScoreWithDeptDao" parameterType="int" resultType="java.util.HashMap">
    	SELECT sum(os_document),sum(os_clean),sum(os_lightout),sum(os_ventilation),sum(os_door) FROM sejongdb.officesecurity where os_deptcode = #{param1};
    </select>
    
    <!-- 당직근무 지시사항 DB -->
    <select id="selectIndicationDao" resultType="string">
    	SELECT wk_indication FROM watchkeeping where date(wk_datetime) = date(now());
    </select>
    
    <update id="updateIndicationDao" parameterType="string">
    	update watchkeeping set wk_indication = #{param1} where date(wk_datetime) = date(now());
    </update>
    
    <insert id="insertIndicationDao" parameterType="string">
    	insert into watchkeeping (wk_indication) values(#{param1});
    </insert>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</mapper>
